import requests
import base64
import json
import logging


import requests
import json

logging.basicConfig(filename="log.log", filemode="a",format="%(asctime)s,%(msecs)d %(name)s %(levelname)s %(message)s", datefmt="%Y-%m-%d %H:%M:%S",level=logging.DEBUG)


class ApiWorker():
    
    def __init__(self):
        self.urlpost = None
        self.urlpage = None
        self.user = None
        self.cred = None
        self.read_vault()
        

    def read_vault(self):
        try:
            with open("keyvault.json") as fi:
                data_tmp = json.load(fi)
                data = data_tmp["keyvault"]
                rv = data[0]
                self.urlpost = rv["urlpost"]
                self.urlpage = rv["urlpage"]
                self.user = rv["user"]
                self.cred = rv["cred"]
        except FileNotFoundError as ex:
            logging.info(ex)
    
    def make_post_and_send(self):
        data = {
            "title": "Title for Post 2",
            "content": "This is the content of my new post.\nThis is a new line\n This is a link https://follow-e-lo.com/\n\n Produced by: " + str(self.user) + "",
            "status": "publish"  # Use "draft" to save the post as a draft

              }
        try:
            # Send the HTTP request
            response = requests.post(self.urlpost, auth=(self.user, self.cred), json=data)
            # Check the response
            if response.status_code == 201:
                logging.info("Post created successfully")
            else:
                logging.error("Failed to create post: " + response.text)
        except Exception as ex:
            logging.error(ex)
    
    def make_post_and_send_html(self):
        content = '<p>This is the content of my new post, is is autogenerated with python.</p>' \
                  '<br>This is a new line for some text</p>' \
                  '<br><p><a href=\"https://www.google.com\" target="_blank"> Here is a link to Google</a></p>' \
                  '<p>Soda:</p>' \
                  '<ul>' \
                   '<li><p><a href=\"https://www.google.com\" target="_blank">Imsdal</a></p></li>' \
                   '<li><p><a href=\"https://www.google.com\" target="_blank">Solo</a></p></li>' \
                   '<li><p><a href=\"https://www.google.com\" target="_blank">Sprite</a></p></li>' \
                  '</ul>' \
                  '<br><p>Produced by: ' + str(self.user)
        data = {
            "title": "Title for Post 4",
            "content": content,
            "tags": 1, # the id of the tag
            "status": "publish"  # Use "draft" to save the post as a draft

              }
        try:
            # Send the HTTP request
            response = requests.post(self.urlpost, auth=(self.user, self.cred), json=data)
            # Check the response
            if response.status_code == 201:
                logging.info("Post created successfully")
            else:
                logging.error("Failed to create post: " + response.text)
        except Exception as ex:
            logging.error(ex)


    def make_page_and_send(self):
        data = {
            "title": "Title for Page 2",
            "content": "This is the content of my new post.\nThis is a new line\n This is a link https://follow-e-lo.com/\n\n Produced by: " + str(self.user) + "",
            "status": "publish"  # Use "draft" to save the post as a draft

              }
        try:
            # Send the HTTP request
            response = requests.post(self.urlpage, auth=(self.user, self.cred), json=data)
            # Check the response
            if response.status_code == 201:
                logging.info("Page created successfully")
            else:
                logging.error("Failed to create page: " + response.text)
        except Exception as ex:
            logging.error(ex)



if __name__ == "__main__":
    worker = ApiWorker()
    # worker.make_post_and_send()
    # worker.make_post_and_send_html()
    worker.make_page_and_send()
